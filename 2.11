#include <stdio.h>
#include <stdlib.h>
#include <string.h>
//#define int long long

union Int32 {
    int x;
    unsigned char bytes[4];
};
int key(union Int32 *nums, int i, int b)
{
    int k = nums[i].bytes[b];
    if (b == 3)
        k = k ^ 128;
    return k;
}
void dsort(union Int32* base, int n, int b, int alphsz) {
    int count [alphsz];
    for (int i = 0; i < alphsz; ++i)
        count[i] = 0;
    for (int i = 0; i < n; ++i)
        ++count[key(base, i, b)];
    for (int i = 1; i < alphsz; ++i)
    {
        count[i] += count[i - 1];
    }
    union Int32 d[n];
    int i = n - 1;
    while (i >= 0)
    {
        int k = key(base, i, b);
        d[count[k] - 1] = base[i];
        --count[k];
        --i;
    }
    for (int j = 0; j < n; ++j)
        base[j] = d[j];
}


signed main()
{
    int n, x;
    scanf("%d", &n);
    union Int32 a[n];
    for (int i = 0; i < n; ++i)
    {
        scanf("%d", &a[i].x);
    }
    for (int i = 0; i < 4; ++i)
    {
        dsort(a, n, i, 256);

    }
    for (int j = 0; j < n; ++j)
    {
        printf("%d ", a[j].x);
    }
    printf("\n");

} //2.11
