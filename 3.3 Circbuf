
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define int long long
//int logs [100];
typedef struct Queue
{
    int head, tail, count, cap;
    int *data;
} Queue;
void init(Queue *s, int n)
{
    (*s).data = malloc(sizeof(int) * n);
    (*s).tail = 0;
    (*s).head = 0;
    (*s).cap = n;
    (*s).count = 0;
}
int max(int a, int b)
{
    if (a > b)
        return a;
    return b;
}
void Enq(Queue *q, int x)
{
    if ((*q).count == (*q).cap)
        printf("queue overflow\n");
    else
    {
        (*q).data[(*q).tail] = x;
        ++(*q).tail;
        if((*q).tail == (*q).cap)
        {
            (*q).cap = max((*q).cap + 1, (*q).cap * 2);
            (*q).data = realloc((*q).data, sizeof(int) * (*q).cap);
        }
        ++(*q).count;
    }
}
int Deq(Queue *q)
{
    if ((*q).count == 0)
        printf("el not exist");
    int x = (*q).data[(*q).head];
    ++(*q).head;
    --(*q).count;
    return x;
}
int Empty(Queue *q)
{
    return (*q).count == 0;
}

signed main()
{
    int n;
    scanf("%d", &n);
    Queue q;
    init(&q, 4);
    int x;
    for (int i = 0; i < n; ++i)
    {
        char command [6];
        scanf("%s", &command);
        if (strcmp(command, "ENQ") == 0)
        {
            scanf("%d", &x);
            Enq(&q, x);
        }
        else if (strcmp(command, "DEQ") == 0)
        {
            printf("%lld", Deq(&q));
        }
        else if (strcmp(command, "EMPTY") == 0)
        {
            if (Empty(&q))
                printf("True");
            else
                printf("False");
            printf("\n");
        }
    }
}

